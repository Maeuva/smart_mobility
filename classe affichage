import random
import tkinter as tk
import csv
import numpy as np

# Constantes pour la taille de la fenêtre
NB_LIEUX = 10
LARGEUR = 800
HAUTEUR = 600

class Affichage:
    def __init__(self, graph, nom_groupe="Groupe Maéva BONNIN, Audrey BOURHIS, Kanelle RICA"):
        self.graph = graph
        self.root = tk.Tk()  # Initialisation correcte de Tkinter
        self.root.title(nom_groupe)

        # Création du canvas pour le dessin
        self.canvas = tk.Canvas(self.root, width=LARGEUR, height=HAUTEUR, bg="white")
        self.canvas.pack()

        # Zone de texte pour les informations
        self.info_label = tk.Label(self.root, text="", anchor="w", justify="left")
        self.info_label.pack(fill="x")

        # Liaison des touches
        self.root.bind("<Escape>", self.fermer_fenetre)
        self.root.bind("<space>", self.afficher_routes)

        # Dessiner les lieux
        self.dessiner_lieux()

    def dessiner_lieux(self):
        """Dessine les lieux sous forme de cercles avec leur numéro."""
        for i, (x, y) in enumerate(self.graph.liste_lieux):
            self.canvas.create_oval(x - 5, y - 5, x + 5, y + 5, fill="red")
            self.canvas.create_text(x, y, text=str(i), font=("Arial", 12, "bold"))

    def afficher_routes(self, event=None):
        """Affiche les N meilleures routes en gris et la meilleure en bleu pointillé."""
        if self.graph.matrice_od is None:
            print("Matrice des distances non chargée.")
            return

        n = min(5, len(self.graph.liste_lieux))  # Nombre de routes affichées
        for i in range(n):
            couleur = "blue" if i == 0 else "lightgray"
            style = (5, 5) if i == 0 else ()

            for j in range(len(self.graph.liste_lieux) - 1):
                x1, y1 = self.graph.liste_lieux[j]
                x2, y2 = self.graph.liste_lieux[j + 1]
                self.canvas.create_line(x1, y1, x2, y2, fill=couleur, dash=style)
                self.canvas.create_text(x1 + 10, y1, text=str(j + 1), font=("Arial", 10))

    def fermer_fenetre(self, event=None):
        """Ferme la fenêtre Tkinter."""
        self.root.quit()

    def run(self):
        """Lance la boucle principale Tkinter."""
        self.root.mainloop()

# Exécution du programme
if __name__ == "__main__":
    graph = Graph()  # Création du graphe avec des lieux aléatoires
    affichage = Affichage(graph)  # Création de l'affichage
    affichage.run()  # Lancement de l'interface graphique

